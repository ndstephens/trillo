/*//?===============  HEADER  ================*/
/*//?----------  MAIN LOGO  ----------*/
.logo {
  height: 3.25rem;
  margin-left: 2rem;
}

/*//?----------  SEARCH INPUT FIELD ----------*/
.search {
  flex: 0 1 40%;
  display: flex;
  justify-content: center;
  align-items: center;

  &__input {
    /*//* the following props don't all inherit unless specifically told to, but then will look up the parent tree until they find the 'prop:value', could be direct parent all the way up to the html tag. */
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--c-grey-light-2);
    border: none;
    padding: 0.7rem 2rem;
    /*//* a high value will provide the rounded corners */
    border-radius: 100px;
    width: 90%;
    /*//* extend input field over to where button w/ icon were */
    margin-right: -2rem;
    transition: all 0.2s;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--c-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--c-grey-light-4);
    }
  }

  &__button {
    border: none;
    background-color: transparent;
    /*//* move button (w/ icon) on top of the input field */
    position: relative;
    right: 1rem;

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--c-primary);
  }
}

/*//?----------  USER NAVIGATION / DETAILS ----------*/
.user-nav {
  /*//* have entire element vertically fill the 'header' parent */
  align-self: stretch;

  display: flex;
  align-items: center;

  /*//* all direct children (__icon-box(es) and __user) */
  & > * {
    padding: 0 2rem;
    cursor: pointer;
    /*//* needed so background-color will fill the space when hovered */
    height: 100%;
    /*//* vertically center the contained elements (__icon(s) and __user-photo/name) */
    display: flex;
    align-items: center;

    &:hover {
      background-color: var(--c-grey-light-2);
    }
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--c-grey-dark-2);
  }

  &__notification {
    font-size: 0.8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--c-primary-light);
    color: #fff;
    position: absolute;
    top: 1.5rem;
    right: 1.1rem;

    /*//* !!!!  FLEXBOX WILL ALSO WORK ON THE TEXT CONTENT WITHIN AN ELEMENT !!!! */
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__user-photo {
    height: 3.75rem;
    border-radius: 50%;
    margin-right: 1rem;
  }
}

/*//?===============  SIDEBAR  ================*/
/*//?----------  NAVIGATION  ----------*/
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }

    &::before {
      /*//* remember, you need to add the 'content' property first */
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 4px;
      background-color: var(--c-primary);
      // transform-origin: bottom;
      transform: scaleY(0);
      transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
        background-color 0.1s;
    }

    /*//* when Javascript code applies the class 'active' (depending on which page is currently loaded) apply this same hover styling to the '::before' pseudo-element */
    &:hover::before,
    &.active::before {
      transform: scaleY(1);
      width: 100%;
    }

    /*//* this the ':active' pseudo class (applies when clicked), DIFFERENT than the 'active' class seen above that would be controlled by Javascript in a real app */
    &:active::before {
      background-color: var(--c-primary-light);
    }
  }

  &__link:link,
  &__link:visited {
    color: var(--c-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 3rem;
    /*//* z-index only works if the 'position' is specified */
    position: relative;
    z-index: 10;

    display: flex;
    align-items: center;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    /*//* uses the color of the current or parent element (.side-nav__link).  would also follow any color changes created by a hover */
    fill: currentColor;
  }
}

/*//?----------  LEGAL  ----------*/
.legal {
  font-size: 1.2rem;
  color: var(--c-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

/*//?===============  HOTEL-VIEW  ================*/
/*//?----------  GALLERY  ----------*/
.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block;
  }
}
/*//?----------  OVERVIEW  ----------*/
.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
  }

  &__stars {
    margin-right: auto;
    /*//* the children elements (__icon-star) did not sit exactly center vertically.  they behaved like text in that they had space under them like text.  changing this parent to 'display: flex' made them flex items thereby removing the space and causing them to be centered ('align-items: center' wasn't needed) */
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--c-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }
  &__icon-location {
    margin-right: 0.5rem;
  }

  &__rating {
    background-color: var(--c-primary);
    color: #fff;
    margin-left: 3rem;
    padding: 0 2.25rem;
    align-self: stretch;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
    /*//* slightly decrease the space between this and the '__rating-count' below it */
    margin-bottom: -3px;
  }

  &__rating-count {
    font-size: 0.8rem;
    text-transform: uppercase;
  }
}

/*//?----------  BUTTON INLINE  ----------*/
.btn-inline {
  border: none;
  color: var(--c-primary);
  font-size: inherit;
  /*//* follows the same color as the text, listed above */
  border-bottom: 1px solid currentColor;
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    // color: var(--c-grey-dark-1);
    animation: pulsate 1s infinite;
  }

  &:focus {
    outline: none;
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }
  50% {
    transform: scale(1.03);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.25);
  }
  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

/*//?----------  DETAIL  ----------*/
.paragraph:not(:last-of-type) {
  margin-bottom: 2rem;
}

.list {
  margin: 3rem 0;
  list-style: none;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  flex-wrap: wrap;

  &__item {
    flex-basis: 50%;
    margin-bottom: 0.7rem;

    &::before {
      /*//* !!! DON'T FORGET to add the 'content' prop, and it needs to height and width to display !!! */
      content: "";
      display: inline-block;
      height: 1rem;
      width: 1rem;
      margin-right: 0.7rem;

      /*//* use the SVG image as a mask so you can color it (by exposing the background-color).  don't forget to use 'mask-size: cover' */
      background-color: var(--c-primary);
      -webkit-mask-image: url("../img/chevron-thin-right.svg");
      -webkit-mask-size: cover;
      mask-image: url("../img/chevron-thin-right.svg");
      mask-size: cover;

      /*//* for older browsers */
      // background-image: url("../img/chevron-thin-right.svg");
      // background-size: cover;
    }
  }
}

.recommend {
  font-size: 1.3rem;
  color: var(--c-grey-dark-3);
  display: flex;
  align-items: center;

  &__count {
    margin-right: auto;
  }

  &__photo {
    /*//* don't want the border forcing the photos to shrink (since border is included in the height and width when using 'border-box').  in this case i want it added to the outside of the image content */
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    border: 3px solid #fff;

    /*//* have them overlap each other */
    &:not(:last-of-type) {
      margin-right: -1.5rem;
    }
  }
}
